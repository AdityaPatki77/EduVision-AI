{
    "transcript": "AI is changing extremely fast in 2025, and so is the way that you should be learning it. So, in this video, I'm going to break down exactly how I would learn AI and ML if I was starting completely from scratch with all of the knowledge that I have today. Let's get into it. Now, the first thing or step zero on my list would be to make sure that I was thinking like an engineer. Now look, there's a long list of topics that I'm going to share with you here. All things that are important to learn. But none of them matter if you don't build that deep critical thinking skill. The things that separate good software engineers from great software engineers are the ability to break down problems and to think critically. So as you listen to this list, keep in mind that it's not about memorizing concepts. It's about truly understanding what's going on and being able to solve abstract complex problems, which is really where humans come in and where we're not yet being replaced by AI models. Anyways, with step zero out of the way, the first thing that I would be focusing on is really diving deep into Python. Now, look, obviously there's all kinds of no code tools out there, but if you want to be an effective AI or ML engineer, I do believe that you still do need to know how to code. And the best way to do that is to start with Python. Python is just the easiest language to learn. It's the best for AI and ML. And personally, if I was diving into this, I would be focusing on learning the fundamentals, skipping all of the advanced theory, and building automation projects as quickly as possible. That's what Python is really good at, automating tasks, doing things like data science. So, I would start with things like scripting or scraping. So, web scraping for example. Then I would get into things like numpy, mapplot, lib, and pandas. and just get really competent working with data sets within Python. I would also focus on learning the basics of APIs. So, how to make a very simple one and how to call APIs from Python. I'd be doing all of this with the goal of building projects as quickly as possible, not getting into the weeds of all of the theoretical concepts and really just getting comfortable writing code in Python so I can use this as a tool later on when I dive more into the advanced AI and ML stuff. So, that's step one. get comfortable with Python and do it in a practical way using a lot of the tools that I just mentioned. That's personally what I would be doing. And by the way, guys, what I'm sharing with you here is not necessarily what I would do if I was trying to land a job, but it's purely what I would do to get good at this as quickly as possible. Now, with that in mind, if you are trying to land an AI or ML job, something that you're going to struggle with is finding a program that teaches you practical skills, but actually balances that with real world credibility. Now, that's why I was quite impressed when I came across SimplyLearn, the sponsor of today's video. Now, this is a world's leading online platform for tech and business education, and they've got a full catalog of hands-on boot camps, and their AI and machine learning programs are seriously well put together. These are live instructor-led classes, not just videos, and they're built in collaboration with some of the world's top universities and companies. The curriculum is projectbased, careerfocused, and covers tools like Python, TensorFlow, and Chat GPT depending on the path that you choose. Now, they've got thousands of five-star reviews, recommendations from Switch up, Course Support, and Forbes, and tons of success stories from students that have completely changed their career after going through the program. Now, if you're serious about getting into AI or ML, then definitely check out Simply Learns Programs. Click the link in the description or the pinned comment to take your first step towards your next big career move. Now, moving on to step number two, and this one I would try to do fairly quickly, and that's to become data literate. What I mean by this is just being familiar working with data. So, I'd want to learn some basic SQL like some joins, some select statements. What actually is SQL? How do you work with this? I would dive much more into something like pandas, learn it with some more advanced operations. And generally, I would just want to be really comfortable working with large sets of data and understanding what that actually means. The reason for that is that in machine learning and AI, pretty much everything comes down to the data. Sure, you can use all of these LLMs, you can use these great tools, but if you don't have good data or you don't know how to work with that, it doesn't matter. You're never going to get a good result. So, I'd want to focus on really becoming data literate at this stage, getting good at querying data, managing data, visualizing it, etc. So that in the next steps I already had that core skill built. Now moving on to step number three where the next thing that I would do is start working with AI models immediately. Now in the past I would have recommended learn all of this theory, learn all of these machine learning algorithms before you dive into things like LLMs. However, today it's crazy what you can build with even really limited knowledge. So I'd want to dive into this straight away just to see what's possible and to make sure that I stayed motivated. Now, that means I would start working with things like the OpenAI API immediately, things like the Claude API. I would work with things like Olama for running models locally. I'd start dabbling with things like Langchain and Langraphph and building some basic AI agents on my own computer. I'd learn about vector databases, retrieval, augmented generation, and start working with some of those tools and building some relatively simple AI apps using Python and using these different libraries. I'd also work with something like Streamlit, for example, for building really simple UIs and data dashboards, and that would teach me quite a bit about what it actually means to build an AI application. I'd get a lot of fundamental coding skills kind of reinforced. And then later, I can go on and learn the more advanced AI and ML stuff, which is what I'm going to move into now. Okay, cool. So, now we're moving on to step four, where I would be taking a step back and learning the core machine learning and AI fundamentals. Now, a lot of people today, they dive straight into LLM, which is what we just did, right? We started working with LLMs, building AI agents, and seeing what's possible with Python and some of those amazing tools. However, once you do that, you definitely should still learn these core algorithms because a lot of times it's really overkill to use an LLM for the type of AI task that you need. So, what I mean by this is I would start focusing on things like regression, classification, clustering. These are machine learning techniques that have been around for 20, 30, 40 years that still work and that you can still use today. I would start looking at libraries in Python like scikitlearn where I could learn how to implement these machine learning algorithms and I can use them to build some basic ML apps. After that, I would start working with things like neural networks. Again, a really popular technique that's been around for a while that a lot of people have seemed to forget about. After null networks, I would look at some basic computer vision stuff and I would start looking at libraries like PyTorch and TensorFlow to build some more complex machine learning applications that don't involve using something like an LLM. Again, the LLM component is super super cool. You should know how to do that. But a lot of the times you simply don't need it and you can build a better application with a lot of these core fundamentals which really aren't that complicated to understand. Okay, so now moving on to the next step which is step number five. After I got the core machine learning techniques and fundamentals out of the way, I would go allin on LLMs and AI agents. Now, look, I know this sounds contradictory to what I just said, but once you build this foundation, you now know what's possible without using an LLM. But this is the new buzz. This is what everyone's using. So, you should be super familiar with this as well. And that's why I would dive straight into LLM and AI agents. Now, the first thing I would want to do is actually understand how an LLM works. understand something like GPT, generative pre-trained transformers. What does that actually mean? Understand the architecture at a high level. Get into some of the weeds and see what can LLM do, what can they not do, and what are these magical black boxes that everybody's using on the internet. Now, after I understood that, I definitely start looking into some no code tools. As much as we can build everything in Python, it's also really useful to use the tools that already exist. As a developer, you can typically use the noode tools better than people that aren't developers. So, I would start looking at tools like Crew AI, Langflow, N8N, things like VPY, LiveKit. There's so many different technologies and tools here for building AI agents and utilizing LLMs. And a lot of times you can build something kind of in their UI platform and then you can hook into it from your Python code and make it really customizable. So, that's personally what I would be doing. And anytime I could use a noode tool, I would if it saved me time and it worked for my particular use case. Again, we're talking about practicality here. How do we practically learn this stuff as quick as possible and get stuff done? Well, sometimes that is using tools that already exist. Now, similar to this, I would also be learning about things like MCP servers, for example. What are those? How do those work? And then I would start looking into a lot of AI code editors as well. This is kind of more of a sidebar. You may have already done this, but I would definitely want to be familiar with tools like Windsurf, Cursor, uh, Lovable, Vzero, Bolt, Replet, all of these AI code editors, how they integrate with things like AI agents, and how I could use them to be super productive and build some really cool AI apps. It's kind of like the Matrix here. I'm building AI using an AI code editor that's powered by AI, that's powered by an LLM, that's reviewed by AI. So, AI is really everywhere here, but I just wanted to mention those tools because you definitely should be familiar with them. and personally I would want to be learning them and using them a lot. So this leads me to the final and objectively most important step on my list and that would be to build a ton of AI applications. The only way you get good at anything is by doing a lot of it and doing it in a nonstructured way where you're constantly being challenged and you're trying to build something that you have no idea how to build. That's how I got good at programming. Building literally thousands of small programming projects. That's exactly what I would want to be doing here. just trying to solve real world problems using the AI skills that I built. This is going to teach me more than probably anything else that I had on this list. And I'm going to see how to put these skills actually into practice. So, I'd be building apps to automate business workflows to build maybe internal AI assistants or chat bots. Maybe I'd try to build something like a SAS. I don't know. I would just build a ton of different applications here. Anything that actually was real world and applicable to someone just to really harness these skills. So, there you have it, guys. That is what I would do if I was starting over and I wanted to learn AI and ML. Again, this is not what I would do if I wanted to land a job. I would have some different skills on the list. This is purely if I wanted to be competent in this field and be able to build things as quickly as possible. This is what would work for me. I don't know if it would work for you, but I'm curious to hear what you think. So, please leave a comment down below. If you enjoyed the video, make sure to leave a like, subscribe to the channel, and I will see you in the next one. [Music]"
}