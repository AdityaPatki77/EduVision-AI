{"transcript": "Python is a high-level interpreted programming language that executes the code line by line. It was developed by Guido Van Rossum in 1991. A Python file ends with a .py extension. This is a simple Python program that prints hello world! In this program, we are using the built-in print function, which prints the output in the terminal and the message we want to display in double-quotes. We can either use double or single quotes it does not matter. We can write comments that the Python interpreter ignores using the  symbol. Like here, This line will be ignored, and the program will behave the same. Hash is used for writing a single-line comment. For multi-line comments, you can use triple quotes at the start and end of the comments like this. We use variables to store values that we can use later in our program. Variables are like labels to value. We can define variables directly by just typing the variable name, and then if you want, you can print the value of the variable using the print function. Unlike in other programming languages like C, we do not have to pre-define data type for the variable in Python. After we assign the value to the variable, the data type according to the value is automatically assigned to that variable. Like here, the data type of this variable is a string because we gave a string value to this variable. To check the data type of any variable, you can use this built-in type function and in parentheses variable name. These are some basic data types in Python. As we saw, string stores a sequence of characters. You can define string using single or double quotes. Integers are whole numbers like 1,2,200 Float is a data type used to store numbers with decimal points. A list holds multiple data items of any type. You can define a list using square brackets and data items separated by a comma. Tuple is like a list that holds multiple data types but is defined using parentheses. To access any item from the list you can enter the variable name and then the position of that item. Remember, the counting starts from Zero, so the index of the first item is zero. In the same way, you can access any item from the tuple. A quick question, do you know the difference between a tuple and a list. If yes, let me know in the comments if you dont, wait for the end, and Ill tell you. A dictionary is used to store key-value data. You can define it using curly brackets. For example, this is a dictionary for a movie. Here these are keys, and then after a colon value for those keys, these key-value pairs are separated by a comma. We can access any value by entering the variable name and then, in square brackets, the key of that value. With dictionaries, you can easily create real-world objects more accurately in Python. Booleans are either True or False and often used in control structures, such as if statements and while loops. Like the print function, we can use other built-in functions, like to get input from the user. We can use the input function. In this example, we are using the input function to get input from the user and then the print function to display the information on the screen. In Python, we use if statements to execute code conditionally. For example, if a specific condition is true, we run a block of code, and if the condition is false, we run another block of code. To write an if statement, write if then the condition you want to check. Here we are checking if x is greater than 10, then a colon and then the code to execute. After that else, then again colon, then the code to execute. If the condition is true, the code in the if block will be executed, and if it is false, the code in the else block will be execute. As you can see, because the value of x is greater than 10, the if statement evaluated to true and displayed the text x is greater than 10 on the screen. One very important thing to remember is that correct indentation is essential in Python, unlike in other programming languages, where we use curly brackets to indicate a block of code belonging to a specific conditional statement or function. We dont use curly brackets in Python, so indentation is required to separate blocks of code, like here because of the proper indentation, Python knows that this code is for the if statement. If I will remove this indentation, Ill get the indentation error. In Python, we use for loops to repeat a specific task for multiple items. To write a for loop, write for and then the variable that you want to use, if we want to loop through a list, we can use item as a variable name, but its not like you have to use the name as item you can name it anything like for movie in movies then what you want to do like print movie. This will iterate through all the items in this list and print them. If you want to print numbers from 1,10, you can use for loop combined with the range function. for i in range1,11 This range creates a sequence of integers. Here 1 is the start value, and 11 is the stop value. So this will make a sequence from 1,10. The range function will stop at 11, so it wont be added in the sequence. After that, we are using i to iterate through all items in the sequence, and we will print them, and numbers from 1,10 is printed in our terminal. As we saw, the for loop takes a collection of items and executes the given code for every item in the collection. But what if we want to loop through a code as long as some condition is true? For that we can use a while loop. To write a while loop, type while, then the condition, and then the code. If the condition is true, then the while loop will run until the condition becomes false. Like here the condition was true until the value of i was less than or equal to 5. After it got greater than 5 condition became false, and while loop exited. Now lets look at how to use functions in Python. We use functions to write blocks of code that can be reused multiple times in our program. A function can take one or more arguments and return a value. You can define a function using the def keyword, then the function name, and then in parentheses if it takes any arguments and then the code of that function. For example, this function prints the addition of the two values. Here we take two values and name them a  b, then we print ab And if I run this function by simply writing its name and two numbers in parentheses. The addition of those numbers will be printed in the terminal. We can also return the value instead of printing them. Like here, we are returning the value of ab using the return keyword, and then we can save that value in a variable. If will print that variable. Ill see the value of the addition. Various people and communities have written Python code for many things, such as scientific calculations or creating games. So if you want to use their code in your code, you can use the import keyword to import their code in your program. For example, here, Im importing everything from the math module.  is a wild card used to import everything. Now I can use functions and variables from that math file. For example, if I try to print the value of pi by just entering pi, Ill get an error cause I do not have any variable named pi. But the math file contains a variable named pi, so if I import everything from math, I can use this variable defined in math. And the value of pi is printed. In the same way, we can use various functions or any other block of code from other files. Lets move this add function to a file named add.py, and then we can import it in our other file using from add import  And then, we can use that add function in this file even though we dont have a function named add here. Now lets look at how to use classes in Python. Classes are used to represent real-world things in our code. It is like a blueprint of the object. For example, I can have a class for a CAR like this using the class keyword. Functions that are part of a class are called methods. So please dont get confused about methods and functions. They are usually the same. Here we have two methods. The first one is the init function which takes 4 arguments, self, brand, model, and year. This is a special type of method that runs automatically when we create something using this class. As I told you earlier, class is like a blueprint when we create something using that blueprint, we call it an instance of that class. Like here, Ive created a my_car using this class. When Python reads this line, it automatically calls this init function from the car class and creates a car with the given data. I can access any attribute of this instance by simply writing the instance name and the dot and then the attribute I want to access, for example, the year of the car. In the same way, I can also access the methods defined in that class. If I want to create another car, i.e., another instance of the car class, I can easily do it as we did earlier and then access its methods and attributes. You dont need to write calsses all the time from scratch. If you want to write a particular version of the class that youve already written, you can use inheritance. Inheritance means using the code of the original class to create a newer one. The original class is the parent class, and the new class is the child class. Lets start by making an ElectricCar class. To inherit the class, we need to write the parent class name in parentheses in the definition of the child class. In the init method, we call this super function, which allows us to call the method from the parent class. So we call the init method of the parent class, which gives our ElectricCar all the attributes defined in the Car class. Now if we want, we can add extra attributes for this class, like battery size. We can do that easily. And in the same way, we can also create different methods for this class. And now, we can create an instance of this class that will have all the methods and attributes of the parent and child classes. Thats it for this video. The difference between tuples and lists is that tuples are immutable, and lists are mutable, which means we can change the values of the list after we declare them, but we cannot do the same in the tuple."}